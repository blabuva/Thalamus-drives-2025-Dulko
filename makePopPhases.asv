function makePopPhases(data, experimentInfo) 
% % parent function: plotAggaUnitsPhase.m

% save('/home/mark/matlab_temp_variables/aggraPPPhase')
% ccc
% load('/home/mark/matlab_temp_variables/aggraPPPhase')
set(0,'DefaultFigureVisible', 'off')
clc
close all
keep phasesCurrentBrainPart experimentInfo


for iExperiment = 1 %:length(phasesCurrentBrainPart)
        currentExperiment = data{iExperiment} ;
        maxYforPlots = findMaxUnitFiring(currentExperiment) ;
        numSWDs = length(currentExperiment) ; % in plot, columns are SWDs
        numberOfNeurons = size(currentExperiment{1},1)  ;
        iPlot = 1 ;
        for iNeuron = 1:numberOfNeurons            
            for iSWD = 1:numSWDs
                currentSWD = currentExperiment{iSWD} ;
                theColorMap = redblue(size(currentSWD,2)) ;
                currentNeuron = currentSWD(iNeuron, :) ;
                currentNeuronVector = cell2mat(currentNeuron) ; 
                if ~isempty(currentNeuronVector)
                    subaxis(numberOfNeurons, numSWDs, iPlot, 'Spacing', 0, 'Padding', 0)
                    currentNeuronPhases = cell2mat(currentSWD(iNeuron,:)) ;
                    currentNeuronEngagement = 100 * (nnz(cellfun(@isempty,currentSWD(iNeuron, :)))/size(currentSWD,2)) ;
                    currentNeuron = currentSWD(iNeuron, :) ;                
                    for iCycle = 1:length(currentNeuron)
                        currentCycle = currentNeuron{iCycle} ;
                        currentRBcolor = theColorMap(iCycle, :) ;
                        if ~isempty(currentCycle)
                            spikePhase = deg2rad(currentCycle * 360) ;
                            numSpikes = length(currentCycle) ;
                            polarplot(spikePhase, ones(numSpikes,1)*numSpikes, 'o', 'markerfacecolor', currentRBcolor, 'markeredgecolor', 'k', ...
                                'markersize', 4)
                            hold on
                            clear currentCycle numSpikes
                        end
                    end 
                    clear theColorMap
                    ax = gca ;
                    ax.ThetaZeroLocation = 'top' ;
                    ax.ThetaDir = 'clockwise' ;
                    ax.FontSize = 3 ;
                    ax.TitleFontSizeMultiplier  =5 ;
                    ax.FontWeight = 'bold ' ;
                    thetaticks([0 90 180 270])
                    thetaticklabels({'','','',''})
                    rlim([0 maxYforPlots])
                    radiusTicks = rticks ;
%                     rl = rticklabels ;
                    for iLabel = 1:length(radiusTicks)-1
                        rl{iLabel} = '' ;
                    end
                        rl{end+1} = num2str(radiusTicks(end)) ;                        
                        rticklabels(rl)

                    if iPlot <= numSWDs
                        title(sprintf('SWD %i', iSWD))
                        subtitle(sprintf('%i Cycles', size(currentSWD,2)))
                    end
                end
                iPlot = iPlot +1 ;
                clear currentSWD theColorMap currentNeuron
            end
            disp(sprintf('Neuron #%i', iNeuron))
        end
                set(gcf, 'units', 'normalized', 'position', [0.01, 0.01, 0.5, 0.9])
    end
    disp('printing figure')
    make_my_figure_fit_HW(numberOfNeurons,numSWDs*2)
    print('/media/markX/testUnits', '-dpng', '-r500')
    close all